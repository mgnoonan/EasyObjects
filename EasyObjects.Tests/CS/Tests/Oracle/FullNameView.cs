
// Generated by MyGeneration Version # (1.1.7.7)

using System;
using System.Data;
using System.Collections;
using System.Collections.Specialized;

using Microsoft.Practices.EnterpriseLibrary.Data;
using NCI.EasyObjects;

namespace NCI.EasyObjects.Tests.Oracle
{

	#region Schema

	public class FullNameViewSchema : NCI.EasyObjects.Schema
	{
		private static ArrayList _entries;
		public static SchemaItem FULLNAME = new SchemaItem("FULLNAME", DbType.AnsiString, SchemaItemJustify.None, 42, true, false, false);
		public static SchemaItem DEPARTMENTID = new SchemaItem("DEPARTMENTID", DbType.Decimal, false, true, false, false, false);
		public static SchemaItem HIREDATE = new SchemaItem("HIREDATE", DbType.DateTime, false, true, false, false, false);
		public static SchemaItem SALARY = new SchemaItem("SALARY", DbType.Decimal, false, true, false, false, false);
		public static SchemaItem ISACTIVE = new SchemaItem("ISACTIVE", DbType.Decimal, false, true, false, false, false);

		public override ArrayList SchemaEntries
		{
			get
			{
				if (_entries == null )
				{
					_entries = new ArrayList();
					_entries.Add(FullNameViewSchema.FULLNAME);
					_entries.Add(FullNameViewSchema.DEPARTMENTID);
					_entries.Add(FullNameViewSchema.HIREDATE);
					_entries.Add(FullNameViewSchema.SALARY);
					_entries.Add(FullNameViewSchema.ISACTIVE);
				}
				return _entries;
			}
		}
	}
	#endregion

	public class FullNameView : EasyObject
	{
		public FullNameView()
		{
			FullNameViewSchema _schema = new FullNameViewSchema();
			this.SchemaEntries = _schema.SchemaEntries;
			this.SchemaGlobal = "MNOONA01";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Properties
		public virtual string FULLNAME
		{
			get
			{
				return this.GetString(FullNameViewSchema.FULLNAME.FieldName);
	    	}
			set
			{
				this.SetString(FullNameViewSchema.FULLNAME.FieldName, value);
			}
		}
		public virtual decimal DEPARTMENTID
		{
			get
			{
				return this.GetDecimal(FullNameViewSchema.DEPARTMENTID.FieldName);
	    	}
			set
			{
				this.SetDecimal(FullNameViewSchema.DEPARTMENTID.FieldName, value);
			}
		}
		public virtual DateTime HIREDATE
		{
			get
			{
				return this.GetDateTime(FullNameViewSchema.HIREDATE.FieldName);
	    	}
			set
			{
				this.SetDateTime(FullNameViewSchema.HIREDATE.FieldName, value);
			}
		}
		public virtual decimal SALARY
		{
			get
			{
				return this.GetDecimal(FullNameViewSchema.SALARY.FieldName);
	    	}
			set
			{
				this.SetDecimal(FullNameViewSchema.SALARY.FieldName, value);
			}
		}
		public virtual decimal ISACTIVE
		{
			get
			{
				return this.GetDecimal(FullNameViewSchema.ISACTIVE.FieldName);
	    	}
			set
			{
				this.SetDecimal(FullNameViewSchema.ISACTIVE.FieldName, value);
			}
		}

		public override string TableName
		{
			get { return "FULLNAMEVIEW"; }
		}
		
		#endregion		
		
		#region String Properties
	
		public virtual string s_FULLNAME
	    {
			get
	        {
				return this.IsColumnNull(FullNameViewSchema.FULLNAME.FieldName) ? string.Empty : base.GetStringAsString(FullNameViewSchema.FULLNAME.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(FullNameViewSchema.FULLNAME.FieldName);
				else
					this.FULLNAME = base.SetStringAsString(FullNameViewSchema.FULLNAME.FieldName, value);
			}
		}

		public virtual string s_DEPARTMENTID
	    {
			get
	        {
				return this.IsColumnNull(FullNameViewSchema.DEPARTMENTID.FieldName) ? string.Empty : base.GetDecimalAsString(FullNameViewSchema.DEPARTMENTID.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(FullNameViewSchema.DEPARTMENTID.FieldName);
				else
					this.DEPARTMENTID = base.SetDecimalAsString(FullNameViewSchema.DEPARTMENTID.FieldName, value);
			}
		}

		public virtual string s_HIREDATE
	    {
			get
	        {
				return this.IsColumnNull(FullNameViewSchema.HIREDATE.FieldName) ? string.Empty : base.GetDateTimeAsString(FullNameViewSchema.HIREDATE.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(FullNameViewSchema.HIREDATE.FieldName);
				else
					this.HIREDATE = base.SetDateTimeAsString(FullNameViewSchema.HIREDATE.FieldName, value);
			}
		}

		public virtual string s_SALARY
	    {
			get
	        {
				return this.IsColumnNull(FullNameViewSchema.SALARY.FieldName) ? string.Empty : base.GetDecimalAsString(FullNameViewSchema.SALARY.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(FullNameViewSchema.SALARY.FieldName);
				else
					this.SALARY = base.SetDecimalAsString(FullNameViewSchema.SALARY.FieldName, value);
			}
		}

		public virtual string s_ISACTIVE
	    {
			get
	        {
				return this.IsColumnNull(FullNameViewSchema.ISACTIVE.FieldName) ? string.Empty : base.GetDecimalAsString(FullNameViewSchema.ISACTIVE.FieldName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(FullNameViewSchema.ISACTIVE.FieldName);
				else
					this.ISACTIVE = base.SetDecimalAsString(FullNameViewSchema.ISACTIVE.FieldName, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter FULLNAME
				{
					get
					{
							WhereParameter wp = new WhereParameter(FullNameViewSchema.FULLNAME);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter DEPARTMENTID
				{
					get
					{
							WhereParameter wp = new WhereParameter(FullNameViewSchema.DEPARTMENTID);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter HIREDATE
				{
					get
					{
							WhereParameter wp = new WhereParameter(FullNameViewSchema.HIREDATE);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter SALARY
				{
					get
					{
							WhereParameter wp = new WhereParameter(FullNameViewSchema.SALARY);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}

				public WhereParameter ISACTIVE
				{
					get
					{
							WhereParameter wp = new WhereParameter(FullNameViewSchema.ISACTIVE);
							this._clause._entity.Query.AddWhereParameter(wp);
							return wp;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter FULLNAME
		    {
				get
		        {
					if(_FULLNAME_W == null)
	        	    {
						_FULLNAME_W = TearOff.FULLNAME;
					}
					return _FULLNAME_W;
				}
			}

			public WhereParameter DEPARTMENTID
		    {
				get
		        {
					if(_DEPARTMENTID_W == null)
	        	    {
						_DEPARTMENTID_W = TearOff.DEPARTMENTID;
					}
					return _DEPARTMENTID_W;
				}
			}

			public WhereParameter HIREDATE
		    {
				get
		        {
					if(_HIREDATE_W == null)
	        	    {
						_HIREDATE_W = TearOff.HIREDATE;
					}
					return _HIREDATE_W;
				}
			}

			public WhereParameter SALARY
		    {
				get
		        {
					if(_SALARY_W == null)
	        	    {
						_SALARY_W = TearOff.SALARY;
					}
					return _SALARY_W;
				}
			}

			public WhereParameter ISACTIVE
		    {
				get
		        {
					if(_ISACTIVE_W == null)
	        	    {
						_ISACTIVE_W = TearOff.ISACTIVE;
					}
					return _ISACTIVE_W;
				}
			}

			private WhereParameter _FULLNAME_W = null;
			private WhereParameter _DEPARTMENTID_W = null;
			private WhereParameter _HIREDATE_W = null;
			private WhereParameter _SALARY_W = null;
			private WhereParameter _ISACTIVE_W = null;

			public void WhereClauseReset()
			{
				_FULLNAME_W = null;
				_DEPARTMENTID_W = null;
				_HIREDATE_W = null;
				_SALARY_W = null;
				_ISACTIVE_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private EasyObject _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
		
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(EasyObject entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter FULLNAME
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(FullNameViewSchema.FULLNAME);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter DEPARTMENTID
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(FullNameViewSchema.DEPARTMENTID);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter HIREDATE
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(FullNameViewSchema.HIREDATE);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter SALARY
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(FullNameViewSchema.SALARY);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}

				public AggregateParameter ISACTIVE
				{
					get
					{
							AggregateParameter ap = new AggregateParameter(FullNameViewSchema.ISACTIVE);
							this._clause._entity.Query.AddAggregateParameter(ap);
							return ap;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter FULLNAME
		    {
				get
		        {
					if(_FULLNAME_W == null)
	        	    {
						_FULLNAME_W = TearOff.FULLNAME;
					}
					return _FULLNAME_W;
				}
			}

			public AggregateParameter DEPARTMENTID
		    {
				get
		        {
					if(_DEPARTMENTID_W == null)
	        	    {
						_DEPARTMENTID_W = TearOff.DEPARTMENTID;
					}
					return _DEPARTMENTID_W;
				}
			}

			public AggregateParameter HIREDATE
		    {
				get
		        {
					if(_HIREDATE_W == null)
	        	    {
						_HIREDATE_W = TearOff.HIREDATE;
					}
					return _HIREDATE_W;
				}
			}

			public AggregateParameter SALARY
		    {
				get
		        {
					if(_SALARY_W == null)
	        	    {
						_SALARY_W = TearOff.SALARY;
					}
					return _SALARY_W;
				}
			}

			public AggregateParameter ISACTIVE
		    {
				get
		        {
					if(_ISACTIVE_W == null)
	        	    {
						_ISACTIVE_W = TearOff.ISACTIVE;
					}
					return _ISACTIVE_W;
				}
			}

			private AggregateParameter _FULLNAME_W = null;
			private AggregateParameter _DEPARTMENTID_W = null;
			private AggregateParameter _HIREDATE_W = null;
			private AggregateParameter _SALARY_W = null;
			private AggregateParameter _ISACTIVE_W = null;

			public void AggregateClauseReset()
			{
				_FULLNAME_W = null;
				_DEPARTMENTID_W = null;
				_HIREDATE_W = null;
				_SALARY_W = null;
				_ISACTIVE_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private EasyObject _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	}
}
