//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Resources;
using System.Reflection;
using System.Globalization;
// -----------------------------------------------------------------------------
//  <autogeneratedinfo>
//      This code was generated by:
//        SR Resource Generator custom tool for VS.NET, by Martin Granell, Readify
// 
//      It contains classes defined from the contents of the resource file:
//        C:\Projects\EasyObjects\src\Configuration\Design\SR.resx
// 
//      Generated: Sunday, November 20, 2005 6:03 PM
//  </autogeneratedinfo>
// -----------------------------------------------------------------------------
namespace NCI.EasyObjects.Configuration.Design
{
    
    
    internal class SR
    {
        
        internal static string CategoryDatabase
        {
            get
            {
                return Keys.GetString(Keys.CategoryDatabase);
            }
        }
        
        internal static string CategoryGeneral
        {
            get
            {
                return Keys.GetString(Keys.CategoryGeneral);
            }
        }
        
        internal static string DatabaseTypeFullyQualifedNameDescription
        {
            get
            {
                return Keys.GetString(Keys.DatabaseTypeFullyQualifedNameDescription);
            }
        }
        
        internal static string DatabaseTypeNodeMenuText
        {
            get
            {
                return Keys.GetString(Keys.DatabaseTypeNodeMenuText);
            }
        }
        
        internal static string DatabaseTypeNodeStatusText
        {
            get
            {
                return Keys.GetString(Keys.DatabaseTypeNodeStatusText);
            }
        }
        
        internal static string DefaultDatabaseName
        {
            get
            {
                return Keys.GetString(Keys.DefaultDatabaseName);
            }
        }
        
        internal static string DefaultDatabaseTypeCollectionNodeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultDatabaseTypeCollectionNodeName);
            }
        }
        
        internal static string DefaultDatabaseTypeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultDatabaseTypeName);
            }
        }
        
        internal static string DefaultDatabaseTypeNodeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultDatabaseTypeNodeName);
            }
        }
        
        internal static string DefaultDynamicQuerySettingsName
        {
            get
            {
                return Keys.GetString(Keys.DefaultDynamicQuerySettingsName);
            }
        }
        
        internal static string DefaultDynamicQueryTypeCollectionNodeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultDynamicQueryTypeCollectionNodeName);
            }
        }
        
        internal static string DefaultDynamicQueryTypeNodeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultDynamicQueryTypeNodeName);
            }
        }
        
        internal static string DefaultInstanceCollectionNodeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultInstanceCollectionNodeName);
            }
        }
        
        internal static string DefaultInstanceNodeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultInstanceNodeName);
            }
        }
        
        internal static string DefaultInstanceTypeDescription
        {
            get
            {
                return Keys.GetString(Keys.DefaultInstanceTypeDescription);
            }
        }
        
        internal static string DefaultParameterNodeName
        {
            get
            {
                return Keys.GetString(Keys.DefaultParameterNodeName);
            }
        }
        
        internal static string DynamicQueryNodeStatusText
        {
            get
            {
                return Keys.GetString(Keys.DynamicQueryNodeStatusText);
            }
        }
        
        internal static string DynamicQueryTypeCollectionNodeMenuText
        {
            get
            {
                return Keys.GetString(Keys.DynamicQueryTypeCollectionNodeMenuText);
            }
        }
        
        internal static string DynamicQueryTypeCollectionNodeStatusText
        {
            get
            {
                return Keys.GetString(Keys.DynamicQueryTypeCollectionNodeStatusText);
            }
        }
        
        internal static string EasyObjectsConfigurationMenuText
        {
            get
            {
                return Keys.GetString(Keys.EasyObjectsConfigurationMenuText);
            }
        }
        
        internal static string EasyObjectsConfigurationStatusText
        {
            get
            {
                return Keys.GetString(Keys.EasyObjectsConfigurationStatusText);
            }
        }
        
        internal static string InstanceCollectionNodeMenuText
        {
            get
            {
                return Keys.GetString(Keys.InstanceCollectionNodeMenuText);
            }
        }
        
        internal static string InstanceCollectionNodeStatusText
        {
            get
            {
                return Keys.GetString(Keys.InstanceCollectionNodeStatusText);
            }
        }
        
        internal static string InstanceDatabaseTypeDescription
        {
            get
            {
                return Keys.GetString(Keys.InstanceDatabaseTypeDescription);
            }
        }
        
        internal static string InstanceNodeMenuText
        {
            get
            {
                return Keys.GetString(Keys.InstanceNodeMenuText);
            }
        }
        
        internal static string InstanceNodeStatusText
        {
            get
            {
                return Keys.GetString(Keys.InstanceNodeStatusText);
            }
        }
        
        internal static string MoveDownMenuItemText
        {
            get
            {
                return Keys.GetString(Keys.MoveDownMenuItemText);
            }
        }
        
        internal static string MoveDownStatusText
        {
            get
            {
                return Keys.GetString(Keys.MoveDownStatusText);
            }
        }
        
        internal static string MoveUpMenuItemText
        {
            get
            {
                return Keys.GetString(Keys.MoveUpMenuItemText);
            }
        }
        
        internal static string MoveUpStatusText
        {
            get
            {
                return Keys.GetString(Keys.MoveUpStatusText);
            }
        }
        
        internal static string ParameterMenuText
        {
            get
            {
                return Keys.GetString(Keys.ParameterMenuText);
            }
        }
        
        internal static string ParameterStatusText
        {
            get
            {
                return Keys.GetString(Keys.ParameterStatusText);
            }
        }
        
        internal static string ParameterValueDescription
        {
            get
            {
                return Keys.GetString(Keys.ParameterValueDescription);
            }
        }
        
        internal static string ExceptionConnectionStringNodeNotFound(object connectionString, object instanceName)
        {
            return Keys.GetString(Keys.ExceptionConnectionStringNodeNotFound, new object[] {
                        connectionString,
                        instanceName});
        }
        
        internal static string ExceptionDatabaseTypeNodeNotFound(object typeName, object instanceName)
        {
            return Keys.GetString(Keys.ExceptionDatabaseTypeNodeNotFound, new object[] {
                        typeName,
                        instanceName});
        }
        
        internal static string ExceptionInstanceNodeNotFound(object instanceName)
        {
            return Keys.GetString(Keys.ExceptionInstanceNodeNotFound, new object[] {
                        instanceName});
        }
        
        internal static string GenericCreateStatusText(string name)
        {
            return Keys.GetString(Keys.GenericCreateStatusText, new object[] {
                        name});
        }
        
        internal class Keys
        {
            
            static System.Resources.ResourceManager resourceManager = new System.Resources.ResourceManager(typeof(SR));
            
            internal const string CategoryDatabase = "CategoryDatabase";
            
            internal const string CategoryGeneral = "CategoryGeneral";
            
            internal const string DatabaseTypeFullyQualifedNameDescription = "DatabaseTypeFullyQualifedNameDescription";
            
            internal const string DatabaseTypeNodeMenuText = "DatabaseTypeNodeMenuText";
            
            internal const string DatabaseTypeNodeStatusText = "DatabaseTypeNodeStatusText";
            
            internal const string DefaultDatabaseName = "DefaultDatabaseName";
            
            internal const string DefaultDatabaseTypeCollectionNodeName = "DefaultDatabaseTypeCollectionNodeName";
            
            internal const string DefaultDatabaseTypeName = "DefaultDatabaseTypeName";
            
            internal const string DefaultDatabaseTypeNodeName = "DefaultDatabaseTypeNodeName";
            
            internal const string DefaultDynamicQuerySettingsName = "DefaultDynamicQuerySettingsName";
            
            internal const string DefaultDynamicQueryTypeCollectionNodeName = "DefaultDynamicQueryTypeCollectionNodeName";
            
            internal const string DefaultDynamicQueryTypeNodeName = "DefaultDynamicQueryTypeNodeName";
            
            internal const string DefaultInstanceCollectionNodeName = "DefaultInstanceCollectionNodeName";
            
            internal const string DefaultInstanceNodeName = "DefaultInstanceNodeName";
            
            internal const string DefaultInstanceTypeDescription = "DefaultInstanceTypeDescription";
            
            internal const string DefaultParameterNodeName = "DefaultParameterNodeName";
            
            internal const string DynamicQueryNodeStatusText = "DynamicQueryNodeStatusText";
            
            internal const string DynamicQueryTypeCollectionNodeMenuText = "DynamicQueryTypeCollectionNodeMenuText";
            
            internal const string DynamicQueryTypeCollectionNodeStatusText = "DynamicQueryTypeCollectionNodeStatusText";
            
            internal const string EasyObjectsConfigurationMenuText = "EasyObjectsConfigurationMenuText";
            
            internal const string EasyObjectsConfigurationStatusText = "EasyObjectsConfigurationStatusText";
            
            internal const string ExceptionConnectionStringNodeNotFound = "ExceptionConnectionStringNodeNotFound";
            
            internal const string ExceptionDatabaseTypeNodeNotFound = "ExceptionDatabaseTypeNodeNotFound";
            
            internal const string ExceptionInstanceNodeNotFound = "ExceptionInstanceNodeNotFound";
            
            internal const string GenericCreateStatusText = "GenericCreateStatusText";
            
            internal const string InstanceCollectionNodeMenuText = "InstanceCollectionNodeMenuText";
            
            internal const string InstanceCollectionNodeStatusText = "InstanceCollectionNodeStatusText";
            
            internal const string InstanceDatabaseTypeDescription = "InstanceDatabaseTypeDescription";
            
            internal const string InstanceNodeMenuText = "InstanceNodeMenuText";
            
            internal const string InstanceNodeStatusText = "InstanceNodeStatusText";
            
            internal const string MoveDownMenuItemText = "MoveDownMenuItemText";
            
            internal const string MoveDownStatusText = "MoveDownStatusText";
            
            internal const string MoveUpMenuItemText = "MoveUpMenuItemText";
            
            internal const string MoveUpStatusText = "MoveUpStatusText";
            
            internal const string ParameterMenuText = "ParameterMenuText";
            
            internal const string ParameterStatusText = "ParameterStatusText";
            
            internal const string ParameterValueDescription = "ParameterValueDescription";
            
            internal static string GetString(string key)
            {
                return resourceManager.GetString(key, CultureInfo.CurrentUICulture);
            }
            
            internal static string GetString(string key, object[] args)
            {
                string msg = resourceManager.GetString(key, CultureInfo.CurrentUICulture);
                msg = string.Format(msg, args);
                return msg;
            }
        }
    }
}
